<Window x:Class="TableCloth.Dialogs.CertSelectWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:TableCloth.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:res="clr-namespace:TableCloth.Resources;assembly=TableCloth.Resources"
        mc:Ignorable="d"
        Style="{DynamicResource MainWindowStyle}"
        Title="{x:Static res:UIStringResources.CertSelectWindow_Title}" Width="480" Height="320"
        MinWidth="640" MinHeight="480"
        TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType"
        d:DataContext="{d:DesignInstance Type=vm:CertSelectWindowViewModelForDesigner, IsDesignTimeCreatable=True}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CertSelectWindowLoadedCommand}">
                <i:InvokeCommandAction.CommandParameter>
                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="55"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="10 10 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" TextWrapping="Wrap" Text="{x:Static res:UIStringResources.CertSelectWindow_InstructionLabel}" />
            <ListView Grid.Row="1" ItemsSource="{Binding Path='CertPairs'}" SelectedItem="{Binding Path='SelectedCertPair'}" d:ItemsSource="{Binding Path='CertPairsForDesigner'}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Setters>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Grid Height="32">
                                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <Rectangle Name="StrikeThrough" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="1" StrokeThickness="1" Stroke="Transparent"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="Lightblue"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding HasExpired}" Value="True">
                                                <Setter TargetName="StrikeThrough" Property="Stroke" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsBefore}" Value="True">
                                                <Setter TargetName="StrikeThrough" Property="Stroke" Value="Red"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="{x:Static res:UIStringResources.CertSelectWindow_CertList_CommonName}" Width="100" DisplayMemberBinding="{Binding CommonName}" />
                        <GridViewColumn Header="{x:Static res:UIStringResources.CertSelectWindow_CertList_Available}" Width="100" DisplayMemberBinding="{Binding Availability}" />
                        <GridViewColumn Header="{x:Static res:UIStringResources.CertSelectWindow_CertList_OrganizationalUnits}" Width="100" DisplayMemberBinding="{Binding OrganizationalUnit}" />
                        <GridViewColumn Header="{x:Static res:UIStringResources.CertSelectWindow_CertList_Organization}" Width="100" DisplayMemberBinding="{Binding Organization}" />
                        <GridViewColumn Header="{x:Static res:UIStringResources.CertSelectWindow_CertList_CountryName}" Width="100" DisplayMemberBinding="{Binding CountryName}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <Grid Grid.Row="2" Margin="0 5 0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Button x:Name="ConvertToPfxButton" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{x:Static res:UIStringResources.Button_ConvertToPfxButton}" Padding="5" Visibility="Hidden">
                    <Button.CommandParameter>
                        <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                    </Button.CommandParameter>
                </Button>
                <Button x:Name="RefreshCertPairsButton" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{x:Static res:UIStringResources.Button_RefreshButton}" Command="{Binding CertSelectWindowScanCertPairCommand}" Padding="5">
                    <Button.CommandParameter>
                        <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                    </Button.CommandParameter>
                </Button>
            </Grid>
            <TextBlock Grid.Row="3" Margin="0 10 0 0" TextWrapping="Wrap" Text="{x:Static res:UIStringResources.CertSelectWindow_ManualInstructionLabelText}" />
            <Button x:Name="OpenCertPairManuallyButton" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{x:Static res:UIStringResources.CertSelectWindow_OpenNpkiCertButton}" Margin="0 5 0 5" Padding="5" Command="{Binding CertSelectWindowManualCertLoadCommand}">
                <Button.CommandParameter>
                    <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                </Button.CommandParameter>
            </Button>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <WrapPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left" Margin="10">
            </WrapPanel>

            <WrapPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" Margin="10">
                <Button x:Name="OkayButton" Content="{x:Static res:UIStringResources.Button_OkayButton}" Command="{Binding CertSelectWindowRequestConfirmCommand}" Padding="5" Margin="0 0 10 0" IsDefault="True">
                    <Button.CommandParameter>
                        <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                    </Button.CommandParameter>
                </Button>
                <Button x:Name="CancelButton" Content="{x:Static res:UIStringResources.Button_CancelButton}" Command="{Binding CertSelectWindowRequestCancelCommand}" Padding="5" Margin="0 0 0 0" IsCancel="True">
                    <Button.CommandParameter>
                        <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                    </Button.CommandParameter>
                </Button>
            </WrapPanel>
        </Grid>
    </Grid>
</Window>
