// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TableCloth.SpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ResourceResolverFeature : object, Xunit.IClassFixture<ResourceResolverFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ResourceResolver.feature"
#line hidden
        
        public ResourceResolverFeature(ResourceResolverFeature.FixtureData fixtureData, TableCloth_SpecFlow_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ko-KR"), "Features", "ResourceResolver", "기능에 대한 간단한 설명을 이곳에 남깁니다.\r\n한국어 문법 참고 - https://velog.io/@clarekang/cucumber-kr-int" +
                    "roduce", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="카탈로그 문서를 불러온다.")]
        [Xunit.TraitAttribute("FeatureTitle", "ResourceResolver")]
        [Xunit.TraitAttribute("Description", "카탈로그 문서를 불러온다.")]
        public virtual void 카탈로그문서를불러온다_()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("카탈로그 문서를 불러온다.", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
testRunner.When("a.a. 카탈로그 문서를 불러오는 함수를 호출하면", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "만일");
#line hidden
#line 9
testRunner.Then("a.b. 카탈로그 문서에 1개 이상의 사이트 정보가 들어있다.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "그러면");
#line hidden
#line 10
testRunner.And("a.c. 마지막으로 카탈로그를 불러온 날짜와 시간 정보를 확인할 수 있다.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "그리고");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="프로그램의 최신 정보를 가져온다.")]
        [Xunit.TraitAttribute("FeatureTitle", "ResourceResolver")]
        [Xunit.TraitAttribute("Description", "프로그램의 최신 정보를 가져온다.")]
        public virtual void 프로그램의최신정보를가져온다_()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("프로그램의 최신 정보를 가져온다.", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "소유자 이름",
                            "리포지터리 이름"});
                table4.AddRow(new string[] {
                            "yourtablecloth",
                            "TableCloth"});
#line 13
testRunner.Given("b.a. 다음의 리포지터리에서 정보를 가져오려 한다.", ((string)(null)), table4, "먼저");
#line hidden
#line 16
testRunner.When("b.b. 버전 정보를 가져오는 함수를 호출하면", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "만일");
#line hidden
#line 17
testRunner.Then("b.c. GitHub에 출시한 최신 버전 정보를 반환한다.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "그러면");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ResourceResolverFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ResourceResolverFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
